
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { getCurrentSchema } from '@/utils/schemaUtils';

const SUPABASE_URL = "https://qvrbjaflrpunkkrdyioc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF2cmJqYWZscnB1bmtrcmR5aW9jIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDExNzMwOTIsImV4cCI6MjA1Njc0OTA5Mn0.fCt7qaX8E9c0uWrfZZf9sQgBFTc_alHlOtWxjh7HNv8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Get the current schema from local storage
const schema = getCurrentSchema();

// Create the Supabase client with the schema configuration
// We're using 'any' type assertion to allow for dynamic schema switching while maintaining type safety
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    db: {
      schema: schema as any // Using 'any' to allow dynamic schema switching
    },
    // Set global error handler for type safety issues with schema switching
    global: {
      headers: {
        // This header helps ensure consistent behavior across schema switches
        'x-schema-name': schema
      }
    }
  }
);
